# Source for data: https://ourworldindata.org/grapher/test-scores-ai-capabilities-relative-human-performance

# https://claude.ai/chat/b257073a-3dc1-4871-87c0-ff5d84d333c4

import pandas as pd
import plotly.express as px

from graphes_livre import apply_template, get_output_path

BEGIN_YEAR = 1900

data = {
    "Année": [
        1998,
        2002,
        2003,
        2006,
        2009,
        2010,
        2011,
        2012,
        2013,
        2014,
        2015,
        2016,
        2017,
        2018,
        2019,
        2020,
        2021,
        2022,
        2023,
    ],
    "Compréhension de lecture avancée (SQuAD2.0)": [
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        -100.0,
        5.87,
        8.67,
        18.9,
        None,
        None,
    ],
    "Compréhension de lecture (SQuAD1.1)": [
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        -100.0,
        -8.89,
        6.63,
        18.12,
        18.85,
        None,
        None,
        None,
    ],
    "Reconnaissance d'images (ImageNet)": [
        None,
        None,
        None,
        None,
        -100.0,
        None,
        None,
        -44.16,
        None,
        -27.8,
        -8.7,
        6.62,
        None,
        11.69,
        None,
        16.45,
        None,
        None,
        None,
    ],
    "Compréhension du langage (GLUE)": [
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        -100.0,
        3.73,
        11.94,
        None,
        15.67,
        None,
    ],
    "Interprétation nuancée du langage (SuperGLUE)": [
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        -100.0,
        None,
        2.73,
        8.20,
        None,
    ],
    "Lecture de chiffres manuscrits (MNIST)": [
        -100.0,
        -48,
        -26.67,
        -25.33,
        None,
        -20,
        -4.0,
        -1.33,  # 2012
        None,
        None,
        None,
        None,
        None,
        2.67,
        None,
        None,
        None,
        None,
        None,
    ],
    "Reconnaissance vocale (Switchboard)": [
        -100.0,
        None,
        None,
        None,
        None,
        None,
        -65.56,
        None,
        -52.7,  # 2013 in end
        -27.8,
        -8.71,
        -1.24,
        0.41,
        1.66,
        None,
        None,
        None,
        None,
        None,
    ],
    "Raisonnement prédictif (HellaSwag)": [
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        -100.0,
        None,
        -80.2,
        -30.6,
        -0.6,
    ],
    "Tests de connaissances générales (MMLU)": [
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        -100.0,
        -45.9,
        -22.5,
        -5.2,
    ],
    "Résolution de problèmes mathématiques (GSM8K)": [
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        -100.0,
        -16.5,
        -7.4,
    ],
    "Génération de code (HumanEval)": [
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        -100.0,
        -49.6,
        -13.1,
    ],
    "Raisonnement complexe (BBH)": [
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        -100.0,
        -54.1,
        -43.1,
    ],
}

df = pd.DataFrame(data)

# Set 'Year' as the index
df.set_index("Année", inplace=True)

df = df.interpolate(method="linear")

longform = df.reset_index().melt(
    id_vars=["Année"], var_name="Domaine", value_name="Score"
)

fig = px.line(
    longform,
    x="Année",
    y="Score",
    color="Domaine",
)

# Update layout
fig.update_yaxes(title="Différence de score (%)")
# Show the plot
apply_template(fig, width=2000, height=400)

fig.write_image(get_output_path("jpg"), width=2000, height=400, scale=4)
